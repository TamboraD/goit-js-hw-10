{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\nconst day = document.querySelector('span[data-days]');\nconst hour = document.querySelector('span[data-hours]');\nconst minute = document.querySelector('span[data-minutes]');\nconst second = document.querySelector('span[data-seconds]');\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      if (options.defaultDate >= selectedDates[0]) {\n          button.disabled = true;\n          \n          iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n          });\n         \n    } else {\n        button.disabled = false;\n    }\n  },\n};\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = value => value.toString().padStart(2, '0');\nbutton.addEventListener('click', start);\n\nfunction start() {\n    button.disabled = true;\n    input.disabled = true;\n\n    const timer = setInterval(() => {\n        const currentDate = new Date();\n        const targetDate = new Date(input.value);\n        const timeDiff = targetDate - currentDate;\n        \n        const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n        day.textContent = addLeadingZero(days);\n        hour.textContent = addLeadingZero(hours);\n        minute.textContent = addLeadingZero(minutes);\n        second.textContent = addLeadingZero(seconds);\n        const finish = [days, hours, minutes, seconds].every(value => value === 0);\n        if (finish) {\n            clearInterval(timer)\n            input.disabled = false\n        }\n    }, 1000)\n}\n"],"names":["input","button","day","hour","minute","second","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","start","timer","currentDate","timeDiff"],"mappings":"+IAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAM,SAAS,cAAc,iBAAiB,EAC9CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAS,SAAS,cAAc,oBAAoB,EAGpDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfD,EAAQ,aAAeC,EAAc,CAAC,GACtCN,EAAO,SAAW,GAElBO,EAAS,MAAM,CACjB,QAAS,qCACT,SAAU,UAClB,CAAW,GAGHP,EAAO,SAAW,EAEvB,CACH,EACAQ,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAChEhB,EAAO,iBAAiB,QAASiB,CAAK,EAEtC,SAASA,GAAQ,CACbjB,EAAO,SAAW,GAClBD,EAAM,SAAW,GAEjB,MAAMmB,EAAQ,YAAY,IAAM,CAC5B,MAAMC,EAAc,IAAI,KAElBC,EADa,IAAI,KAAKrB,EAAM,KAAK,EACToB,EAExB,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUW,CAAQ,EAE5DnB,EAAI,YAAcc,EAAeJ,CAAI,EACrCT,EAAK,YAAca,EAAeH,CAAK,EACvCT,EAAO,YAAcY,EAAeF,CAAO,EAC3CT,EAAO,YAAcW,EAAeD,CAAO,EAC5B,CAACH,EAAMC,EAAOC,EAASC,CAAO,EAAE,MAAME,GAASA,IAAU,CAAC,IAErE,cAAcE,CAAK,EACnBnB,EAAM,SAAW,GAExB,EAAE,GAAI,CACX"}